<?php

namespace PHPCRProxies\__CG__\Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MenuNode extends \Symfony\Cmf\Bundle\MenuBundle\Doctrine\Phpcr\MenuNode implements \Doctrine\Common\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'locale', 'linkType', 'content', 'publishable', 'publishStartDate', 'publishEndDate', 'id', 'parent', 'name', 'children', 'label', 'uri', 'route', 'attributes', 'childrenAttributes', 'linkAttributes', 'labelAttributes', 'extras', 'routeParameters', 'display', 'displayChildren', 'routeAbsolute');
        }

        return array('__isInitialized__', 'locale', 'linkType', 'content', 'publishable', 'publishStartDate', 'publishEndDate', 'id', 'parent', 'name', 'children', 'label', 'uri', 'route', 'attributes', 'childrenAttributes', 'linkAttributes', 'labelAttributes', 'extras', 'routeParameters', 'display', 'displayChildren', 'routeAbsolute');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MenuNode $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', array());

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', array($locale));

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', array());

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublishable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublishable', array());

        return parent::isPublishable();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishable($publishable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishable', array($publishable));

        return parent::setPublishable($publishable);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishStartDate', array());

        return parent::getPublishStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishStartDate(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishStartDate', array($date));

        return parent::setPublishStartDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishEndDate', array());

        return parent::getPublishEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishEndDate(\DateTime $date = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishEndDate', array($date));

        return parent::setPublishEndDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkType', array());

        return parent::getLinkType();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkType($linkType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkType', array($linkType));

        return parent::setLinkType($linkType);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setPosition($parent, $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPosition', array($parent, $name));

        return parent::setPosition($parent, $name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', array());

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri($uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', array($uri));

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', array());

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoute($route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoute', array($route));

        return parent::setRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributes', array());

        return parent::getAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributes(array $attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributes', array($attributes));

        return parent::setAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute($name, $default = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', array($name, $default));

        return parent::getAttribute($name, $default);
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($name, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', array($name, $value));

        return parent::setAttribute($name, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildrenAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildrenAttributes', array());

        return parent::getChildrenAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setChildrenAttributes(array $attributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildrenAttributes', array($attributes));

        return parent::setChildrenAttributes($attributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', array());

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Symfony\Cmf\Bundle\MenuBundle\Model\MenuNode $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', array($child));

        return parent::addChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getRouteParameters()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRouteParameters', array());

        return parent::getRouteParameters();
    }

    /**
     * {@inheritDoc}
     */
    public function setRouteParameters($routeParameters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRouteParameters', array($routeParameters));

        return parent::setRouteParameters($routeParameters);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtras()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtras', array());

        return parent::getExtras();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtras(array $extras)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtras', array($extras));

        return parent::setExtras($extras);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkAttributes', array());

        return parent::getLinkAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkAttributes($linkAttributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkAttributes', array($linkAttributes));

        return parent::setLinkAttributes($linkAttributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabelAttributes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabelAttributes', array());

        return parent::getLabelAttributes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabelAttributes($labelAttributes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabelAttributes', array($labelAttributes));

        return parent::setLabelAttributes($labelAttributes);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplay', array());

        return parent::getDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplay($display)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplay', array($display));

        return parent::setDisplay($display);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayChildren', array());

        return parent::getDisplayChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayChildren($displayChildren)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayChildren', array($displayChildren));

        return parent::setDisplayChildren($displayChildren);
    }

    /**
     * {@inheritDoc}
     */
    public function getRouteAbsolute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRouteAbsolute', array());

        return parent::getRouteAbsolute();
    }

    /**
     * {@inheritDoc}
     */
    public function setRouteAbsolute($routeAbsolute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRouteAbsolute', array($routeAbsolute));

        return parent::setRouteAbsolute($routeAbsolute);
    }

}
